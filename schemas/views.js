import slugify from '../utils/slugify'

export default {
  title: "Views",
  name: 'views',
  type: "document",
  fields: [
    {
      title: "Title",
      name: "title",
      description: "The name of this Article",
      type: "string",
      validation: Rule => Rule.required()
    },
    {
      title: "Featured",
      name: "featured",
      description: "Whether this article is 'Featured' which will pin it to the top of the index",
      type: "boolean",
      defaultValue: false
    },
    {
      title: "Hero Image",
      description: "The (optional) hero image for this article",
      name: "heroImage",
      type: "defaultImage"
    },
    {
      title: "Publish Date",
      description: "Press the button to the right to pick a date.",
      name: "publishDate",
      type: "date",
      options: {
        dateFormat: "MMMM Do YYYY",
      },
      validation: Rule => Rule.required()
    },
    {
      title: 'Category',
      name: 'category',
      type: 'reference',
      to: [{type: 'categories'}]
    },
    {
      title: 'Content Blocks',
      name: 'contentBlocks',
      description: 'The modular content blocks for this article',
      type: 'array',
      of: [
        {type: 'textBlock', title: 'Text'},
        {type: 'modularImageBlock', title: 'Image'},
        {type: 'modularQuoteBlock', title: 'Quote'},
      ],
    },
    {
      name: 'slug',
      type: 'slug',
      title: 'Slug',
      description: 'This is required for page routing and can be auto-generated by pressing "generate"',
      options: {
        source: (doc) => {
          let titleSlug = ''
          let campaignSlug = ''
          if (doc.title) {
            titleSlug = `${doc.title}`
          } else {
            titleSlug = ''
          }

          if (doc.campaignTitle) {
            campaignSlug = `-${doc.campaignTitle}`
          } else {
            campaignSlug = ''
          }

          return `${titleSlug}${campaignSlug}`;
        },
        maxLength: 96,
        slugify: (input) => slugify(`${input}`)
      },
      validation: Rule => Rule.required()
    },
    {
      title: 'SEO / Share Settings',
      name: 'seo',
      type: 'seo'
    }
  ],
  preview: {
    select: {
      title: 'title',
      featured: 'featured',
      publishDate: 'publishDate'
    },
    prepare(selection) {
      const {featured, title, publishDate} = selection
      return {
        title: title,
        subtitle: `${publishDate}${featured ? ' - FEATURED' : '' }`
      }
    }
  }
}